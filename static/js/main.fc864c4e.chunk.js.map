{"version":3,"sources":["components/counter/counter.js","components/counterValue/counter-value.js","components/counterWrapper/counterWrapper.js","components/app/App.js","reportWebVitals.js","index.js"],"names":["Counter","count","handleCountChanged","savingInprogress","className","id","getLoader","onClick","type","value","onChange","oEvent","sValue","target","CounterValue","timer","CounterWrapper","maxCount","minCount","useState","setCount","setSavingInprogress","updateCountInDataBase","newCount","a","clearTimeout","oRequestData","counter","axios","post","setTimeout","bind","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUA2CeA,MAvCf,YAAiE,IAA/CC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,mBAAoBC,EAAmB,EAAnBA,iBA0B3C,OACI,sBAAKC,UAAW,WAAhB,UACE,qBAAKA,UAAW,gBAAhB,SAZY,WAChB,GAAID,EACF,OACI,qCACE,qBAAKC,UAAW,YAChB,qBAAKC,GAAK,SAASD,UAAW,SAA9B,qCAQDE,KAEH,sBAAKF,UAAW,YAAhB,UACE,qBAAKA,UAAW,QAASG,QApBV,WACrBL,EAAmBD,EAAQ,IAmBrB,iBACA,uBAAOO,KAAM,OAAQJ,UAAW,QAASK,MAAOR,EAAOS,SA/BvC,SAACC,GACvB,IAAIC,EAASD,EAAOE,OAAOJ,MAC3BP,EAAmBU,MA8Bb,qBAAKR,UAAW,OAAQG,QA1BT,WACrBL,EAAmBD,EAAQ,IAyBrB,wB,MC3BKa,MARf,YAAgC,IAATb,EAAQ,EAARA,MAErB,OACI,qBAAKG,UAAW,sBAAhB,SACE,sBAAKA,UAAW,QAAhB,2BAAwCH,QCD5Cc,G,MAAQ,MA2CGC,MAzCf,YAA0D,IAAD,WAAhCC,gBAAgC,MAArB,IAAqB,MAAfC,gBAAe,MAAJ,EAAI,IAC7BC,mBAASD,GADoB,mBAChDjB,EADgD,KACzCmB,EADyC,OAEPD,oBAAS,GAFF,mBAEhDhB,EAFgD,KAE9BkB,EAF8B,KAoBnDC,EAAqB,uCAAI,WAAMC,GAAN,eAAAC,EAAA,6DAC3BC,aAAaV,GACTW,EAAe,CAACC,QAASJ,GAFF,SAGrBK,IAAMC,KAAK,qEAAsEH,GAH5D,OAI3BL,GAAoB,GAJO,2CAAJ,sDASzB,OACI,sBAAKjB,UAAW,aAAhB,UACE,cAAC,EAAD,CACIF,mBA3BiB,SAACqB,GACtBA,GAAYL,GAAYK,GAAYN,GACtCG,EAAoB,EAAXG,GAMPR,GACFU,aAAaV,GAEfM,GAAoB,GACpBN,EAAQe,WAAWR,EAAsBS,KAAK,EAAMR,GAAW,MAP7DH,EAASnB,IAuBHA,MAAOA,EACPE,iBAAkBA,IAEtB,cAAC,EAAD,CAAcF,MAAOA,QClCd+B,MAHf,WACE,OAAO,cAAC,EAAD,KCIMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fc864c4e.chunk.js","sourcesContent":["import './counter.css';\r\nimport React from 'react';\r\nimport loader from '../../images/loading.gif'\r\n\r\nfunction Counter({count, handleCountChanged, savingInprogress}) {\r\n\r\n  const handleOnChanged = (oEvent) => {\r\n    let sValue = oEvent.target.value;\r\n    handleCountChanged(sValue);\r\n  };\r\n\r\n\r\n  const incrementCount = () => {\r\n    handleCountChanged(count + 1);\r\n  };\r\n\r\n  const decrementCount = () => {\r\n    handleCountChanged(count - 1);\r\n  };\r\n\r\n  const getLoader = () => {\r\n    if (savingInprogress) {\r\n      return (\r\n          <>\r\n            <div className={\"spinner\"}></div>\r\n            <div id = \"loader\" className={\"loader\"}>Saving Counter value</div>\r\n          </>\r\n      )\r\n    }\r\n  };\r\n  return (\r\n      <div className={\"artBoard\"}>\r\n        <div className={\"loaderWrapper\"}>\r\n          {getLoader()}\r\n        </div>\r\n        <div className={\"rectangle\"}>\r\n          <div className={\"minus\"} onClick={decrementCount}> - </div>\r\n          <input type={\"text\"} className={\"count\"} value={count} onChange={handleOnChanged}/>\r\n          <div className={\"plus\"} onClick={incrementCount}> + </div>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\nexport default Counter;\r\n","import React from 'react';\r\nimport \"./basic-counter-value.css\";\r\n\r\nfunction CounterValue({count}) {\r\n\r\n  return (\r\n      <div className={\"counterValueWrapper\"}>\r\n        <div className={\"label\"}>Counter Value:{count}</div>\r\n      </div>\r\n  );\r\n}\r\nexport default CounterValue;\r\n","import axios from 'axios';\r\nimport React, { useState} from 'react';\r\nimport Counter from \"../counter/counter\";\r\nimport CounterValue from \"../counterValue/counter-value\";\r\nimport \"./basic-counter-wrapper.css\"\r\n\r\nlet timer = null;\r\n\r\nfunction CounterWrapper({maxCount = 1000, minCount = 1}) {\r\n  const [count, setCount] = useState(minCount);\r\n  const [savingInprogress, setSavingInprogress] = useState(false);\r\n\r\n\r\n  const handleCountChanged = (newCount) => {\r\n    if (newCount >= minCount && newCount <= maxCount) {\r\n      setCount(newCount * 1);\r\n    }\r\n    else {\r\n      setCount(count);\r\n      return;\r\n    }\r\n    if (timer) {\r\n      clearTimeout(timer)\r\n    }\r\n    setSavingInprogress(true);\r\n    timer = setTimeout(updateCountInDataBase.bind(this, newCount), 1000);\r\n  };\r\n\r\n  let updateCountInDataBase  = async(newCount) => {\r\n    clearTimeout(timer);\r\n    let oRequestData = {counter: newCount};\r\n    await axios.post('https://interview-8e4c5-default-rtdb.firebaseio.com/front-end.json', oRequestData);\r\n    setSavingInprogress(false);\r\n\r\n  };\r\n\r\n\r\n  return (\r\n      <div className={\"wrapperDiv\"}>\r\n        <Counter\r\n            handleCountChanged={handleCountChanged}\r\n            count={count}\r\n            savingInprogress={savingInprogress}\r\n        />\r\n        <CounterValue count={count}/>\r\n      </div>\r\n\r\n  );\r\n}\r\nexport default CounterWrapper;\r\n","import './App.css';\n\nimport React from 'react';\nimport CounterWrapper from \"../counterWrapper/counterWrapper\";\n\n\n\nfunction App() {\n  return <CounterWrapper/>\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}